@model IFabricClient
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
	IFabricAppSession app = Model.AppSession;
	IFabricPersonSession per = Model.PersonSession;
}
<h1>Example Site</h1>
<h2>OAuth Demonstration</h2>
<p>
	@Html.ActionLink("Home", "Index", "Home")<br />
	<br />

	<b>App Session</b><br />
	SessionId: @app.SessionId<br />
	IsAuthenticated: @app.IsAuthenticated<br />
	Expiration: @app.Expiration<br />
	GrantCode: @app.GrantCode<br />
	BearerToken: @app.BearerToken<br />
	RefreshToken: @app.RefreshToken<br />
	@Html.ActionLink("RequestAuthentication", "RequestAppAuth") ... forces re-authentication<br />
	@Html.ActionLink("RefreshIfNecessary", "AppRefresh")<br />
	@Html.ActionLink("Logout", "AppLogout")<br />
	<br />

	<b>Person Session</b><br />
	SessionId: @per.SessionId<br />
	IsAuthenticated: @per.IsAuthenticated<br />
	Expiration: @per.Expiration<br />
	GrantCode: @per.GrantCode<br />
	BearerToken: @per.BearerToken<br />
	RefreshToken: @per.RefreshToken<br />
	<a href="#" onclick="@per.GetGrantWindowOpenScript()">
		GetGrantWindowOpenScript()</a> ... Fabric login popup<br />
	<a href="#" onclick="@per.GetGrantWindowOpenScript(per.GetGrantCodeUrl(true))">
		GetGrantWindowOpenScript(switch)</a> ... Fabric login popup, forces re-login<br />
	<a href="@per.GetGrantCodeUrl(false)">
		GetGrantCodeUrl()</a> (link to Fabric login page)<br />
	<a href="@per.GetGrantCodeUrl(true)">
		GetGrantCodeUrl(switch)</a> ... link to Fabric login page, forces re-login<br />
	@Html.ActionLink("RefreshIfNecessary", "PersonRefresh") ... only works if previously authenticated<br />
	@Html.ActionLink("Logout", "PersonLogout")<br />

</p>