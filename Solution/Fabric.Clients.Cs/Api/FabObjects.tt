<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="$(SolutionDir)Fabric.Clients.Cs.Spec\bin\Debug\Fabric.Clients.Cs.Spec.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Fabric.Clients.Cs.Spec" #>
<#@ import namespace="Fabric.Clients.Cs.Spec.SpecDto" #>
<#@ output extension=".cs" #>
// GENERATED CODE
// Changes made to this source file will be overwritten
// Generated on <#= DateTime.Now.ToString() #>

namespace Fabric.Clients.Cs.Api {

<#
FabSpec spec = SpecBuilder.Spec;

foreach ( FabSpecObject o in spec.Objects ) {
	string extendsInt = (o.Extends == null ? "" : " : I"+o.Extends);
	string extends = (o.Extends == null ? "" : o.Extends+", ");
#>
	/*================================================================================================*/
	/// <summary>
	///   <#= SpecBuilder.ToXmlDocSentence(o.Description) #>
	/// </summary>
	/// <remarks>
	///   <#= SpecBuilder.ToXmlDoc(o.Description, true) #>
	/// </remarks>
	public interface I<#= o.Name+extendsInt #> {
	
<#
	foreach ( FabSpecObjectProp p in o.Properties ) {
		string type = (p.Type.IndexOf("Fab") == 0 ? "I" : "")+p.Type;
#>
		/// <summary>
		///   <#= SpecBuilder.ToXmlDocSentence(p.Description) #>
		/// </summary>
		<#= type #> <#= p.Name #> { get; set; }
		
<#
	}
#>
	}
	
	
	/*================================================================================================*/
	internal class <#= o.Name #> : <#= extends #>I<#= o.Name #> {
	
<#
	foreach ( FabSpecObjectProp p in o.Properties ) {
		string type = (p.Type.IndexOf("Fab") == 0 ? "I" : "")+p.Type;
#>
		public <#= type #> <#= p.Name #> { get; set; }
<#
	}
#>

	}

	
<#
}
#>
}