<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ assembly name="$(SolutionDir)Fabric.Clients.Cs.Spec/bin/Debug/Fabric.Clients.Cs.Spec.dll" #>
<#@ import namespace="System.IO" #>
<#@ import namespace="Fabric.Clients.Cs.Spec" #>
<#@ import namespace="Fabric.Clients.Cs.Spec.SpecDto" #>
<#@ output extension=".cs" #>
// GENERATED CODE
// Changes made to this source file will be overwritten
// Generated on <#= DateTime.Now.ToString() #>

using Fabric.Clients.Cs.Session;

namespace Fabric.Clients.Cs.Api {

	/*================================================================================================*/
	public interface IFabricServices {
		
		///<summary>
		///  The API version used to generate the Fabric client code.
		///</summary>
		string ApiVersion { get; }

<#
FabSpec spec = SpecBuilder.Spec;

foreach ( FabSpecService s in spec.Services ) {
#>
		///<summary>
		///  <#= SpecBuilder.ToXmlDocSentence(s.Description) #>
		///</summary>
		I<#= s.Name #>Service <#= s.Name #> { get; }

<#
}
#>
	}

	
	/*================================================================================================*/
	internal class FabricServices : IFabricServices {
		
		private readonly IClientContext vContext;

		
		////////////////////////////////////////////////////////////////////////////////////////////////
		/*--------------------------------------------------------------------------------------------*/
		public FabricServices(IClientContext pContext) {
			vContext = pContext;
		}

		/*--------------------------------------------------------------------------------------------*/
		public string ApiVersion { get { return "<#= spec.ApiVersion #>"; } }

		
		////////////////////////////////////////////////////////////////////////////////////////////////
<#
foreach ( FabSpecService s in spec.Services ) {
#>
		/*--------------------------------------------------------------------------------------------*/
		public I<#= s.Name #>Service <#= s.Name #> {
			get { return new <#= s.Name #>Service(vContext); }
		}

<#
}
#>
	}

}